
import com.google.gson.Gson;
import java.io.DataInputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.net.Socket;
import java.net.SocketException;
import java.util.Objects;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.json.JSONObject;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Ahmed
 */
public class LoginClient extends javax.swing.JFrame {

    RegisterClient rf;
    Socket server;
    DataInputStream dataInputStream;
    PrintStream printStream;
    Thread th;
    String userName = null;

    public LoginClient() {

        try {
            initComponents();
            this.setTitle("Iwish Project");
            Lmsg.setVisible(false);
            this.setLocationRelativeTo(null);
            chkLbl1.setVisible(false);

            try {
                server = new Socket("127.0.0.1", 5005);
                dataInputStream = new DataInputStream(server.getInputStream());
                printStream = new PrintStream(server.getOutputStream());
            } catch (SocketException e) {
                LoginBtn.setEnabled(false);
                LSignup.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Server is off now please try again later");
                Lmsg.setVisible(true);
                Tusername.setEnabled(false);
                Tpassword.setEnabled(false);

            }

        } catch (IOException ex) {
            Logger.getLogger(LoginClient.class.getName()).log(Level.SEVERE, null, ex);
        }

        Thread th = new Thread(new Runnable() {

            @Override
            public void run() {
                while (true) {
                    String str = null;
                    try {
                        if (dataInputStream != null) {
                            try {str = dataInputStream.readLine();}
                            catch(SocketException e) {
                            server.close();
                            close_frame();
                            break;
                            }
                            if (str != null) {
                                System.out.println(str);
                                //UserDTO userDto = new Gson().fromJson(str, UserDTO.class);
                                System.out.println("test" + str);
                                //System.out.println(userDto.fname);
                                if (str != null && userName != null) {
                                    if (userName.equals(str)) {
                                        System.out.println(userName + "respond");
                                        //JOptionPane.showMessageDialog(null, "user logged in with username" + userDto.usrname);
                                        closeFrame(userName);
                                    } else {
                                        chkLbl1.setVisible(true);
                                    }
                                }
                            } else {
                                System.out.println("else");
                                JOptionPane.showMessageDialog(null, "Server is off now please try again later");
                                close_frame();
                                break;
                            }
                        }
                    } catch (IOException ex) {
                        try {
                            dataInputStream.close();
                        } catch (IOException ex1) {
                            Logger.getLogger(LoginClient.class.getName()).log(Level.SEVERE, null, ex1);
                        }
                        Logger.getLogger(RegisterClient.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
        });
        th.start();
    }

    public void closeFrame(String name) {
        this.dispose();
        UserProfile userFrame = new UserProfile(name);
        //AddItem addItem = new AddItem(name);
        System.out.println(Tusername.getText());
        userFrame.setVisible(true);
        //this.setVisible(false);
        chkLbl1.setVisible(false);
    }
    public void close_frame(){
    this.dispose();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        Footerpnl = new javax.swing.JPanel();
        Lcreateaccount = new javax.swing.JLabel();
        LSignup = new javax.swing.JLabel();
        Headerpnl = new javax.swing.JPanel();
        Centerpnl = new javax.swing.JPanel();
        Loginpnl = new javax.swing.JPanel();
        LoginBtn = new javax.swing.JButton();
        Clientpnl = new javax.swing.JPanel();
        Lusername = new javax.swing.JLabel();
        Lpassword = new javax.swing.JLabel();
        Tusername = new javax.swing.JTextField();
        Tpassword = new javax.swing.JPasswordField();
        Lmsg = new javax.swing.JLabel();
        chkLbl1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(700, 710));

        Footerpnl.setPreferredSize(new java.awt.Dimension(400, 50));

        Lcreateaccount.setText("Don't have account?");
        Footerpnl.add(Lcreateaccount);

        LSignup.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        LSignup.setText("Sign UP");
        LSignup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LSignupMouseClicked(evt);
            }
        });
        Footerpnl.add(LSignup);

        getContentPane().add(Footerpnl, java.awt.BorderLayout.PAGE_END);

        Headerpnl.setPreferredSize(new java.awt.Dimension(400, 50));
        getContentPane().add(Headerpnl, java.awt.BorderLayout.PAGE_START);

        Centerpnl.setLayout(new java.awt.BorderLayout());

        Loginpnl.setMinimumSize(new java.awt.Dimension(100, 50));

        LoginBtn.setText("Login");
        LoginBtn.setPreferredSize(new java.awt.Dimension(200, 40));
        LoginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginBtnActionPerformed(evt);
            }
        });
        Loginpnl.add(LoginBtn);

        Centerpnl.add(Loginpnl, java.awt.BorderLayout.PAGE_END);

        Clientpnl.setPreferredSize(new java.awt.Dimension(100, 50));
        Clientpnl.setLayout(new java.awt.GridBagLayout());

        Lusername.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Lusername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lusername.setText("User Name");
        Lusername.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        Lusername.setMaximumSize(new java.awt.Dimension(200, 50));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(45, 69, 0, 0);
        Clientpnl.add(Lusername, gridBagConstraints);

        Lpassword.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        Lpassword.setText("Password");
        Lpassword.setPreferredSize(new java.awt.Dimension(1000, 60));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 69, 0, 0);
        Clientpnl.add(Lpassword, gridBagConstraints);

        Tusername.setPreferredSize(new java.awt.Dimension(50, 25));
        Tusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TusernameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 130;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(38, 29, 0, 0);
        Clientpnl.add(Tusername, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 130;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 29, 0, 0);
        Clientpnl.add(Tpassword, gridBagConstraints);

        Lmsg.setForeground(new java.awt.Color(255, 0, 0));
        Lmsg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Lmsg.setText("The Server is off now please try again later  ");
        Lmsg.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 89, 36, 0);
        Clientpnl.add(Lmsg, gridBagConstraints);

        chkLbl1.setText("Wrong Credentials");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 53, 0, 54);
        Clientpnl.add(chkLbl1, gridBagConstraints);

        Centerpnl.add(Clientpnl, java.awt.BorderLayout.CENTER);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/images.png"))); // NOI18N
        jLabel3.setAlignmentY(5.0F);
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel3.setPreferredSize(new java.awt.Dimension(1000, 200));
        Centerpnl.add(jLabel3, java.awt.BorderLayout.PAGE_START);

        getContentPane().add(Centerpnl, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LSignupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LSignupMouseClicked
        rf = new RegisterClient();
        //this.setVisible(false);
        this.dispose();
        rf.setVisible(true);
    }//GEN-LAST:event_LSignupMouseClicked

    private void LoginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginBtnActionPerformed

      try {
            JSONObject jsonObject = new JSONObject();
            userName = Tusername.getText();
            String password = Tpassword.getText();
            
            if(!userName.equals("") & !password.equals("")){
                System.out.println("test login validation...");
            jsonObject.put("msg", "login");
            jsonObject.put("username", userName);
            jsonObject.put("password", password);
            printStream.println(jsonObject.toString());
            printStream.flush();
            System.out.println(jsonObject.toString());
            Tusername.setText("");
            Tpassword.setText("");
            }
            else{
                JOptionPane.showMessageDialog(null, "Please Enter your Full Credentials...");
            }
            

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "bla bla");
        }

    }//GEN-LAST:event_LoginBtnActionPerformed

    private void TusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TusernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TusernameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginClient().setVisible(true);
            }
        });
    }

    //@Override
    /*public void dispose() {
        System.out.println("Closing All Open Resources ...");
        try {
            // CLOSE ALL Sockets and Resources
            if (Objects.nonNull(printStream)) {
                System.out.println("Closing Print Stream ...");
                printStream.close();
            }
            if (Objects.nonNull(dataInputStream)) {
                System.out.println("Closing Data Input Stream ...");
                dataInputStream.close();
            }
            //if (Objects.nonNull(server) && !server.isClosed()) {
            // System.out.println("Closing Socket Server ...");
            //server.close();
            //}
        } catch (IOException ex) {
            Logger.getLogger(LoginClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        super.dispose();
    }*/


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Centerpnl;
    private javax.swing.JPanel Clientpnl;
    private javax.swing.JPanel Footerpnl;
    private javax.swing.JPanel Headerpnl;
    private javax.swing.JLabel LSignup;
    private javax.swing.JLabel Lcreateaccount;
    private javax.swing.JLabel Lmsg;
    private javax.swing.JButton LoginBtn;
    private javax.swing.JPanel Loginpnl;
    private javax.swing.JLabel Lpassword;
    private javax.swing.JLabel Lusername;
    private javax.swing.JPasswordField Tpassword;
    private javax.swing.JTextField Tusername;
    private javax.swing.JLabel chkLbl1;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
